{
  "name": "bat-ledger",
  "version": "0.9.0",
  "description": "A BAT micropayments system for users and publishers.",
  "main": "index.js",
  "scripts": {
    "balance-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/balance/server.js",
    "build": "npm run build-utils && npm run build-ledger && npm run build-eyeshade && npm run build-balance && npm run build-helper && cp config.js dist/config.js",
    "build-balance": "babel balance -d dist/balance",
    "build-eyeshade": "babel eyeshade -d dist/eyeshade",
    "build-helper": "babel helper -d dist/helper",
    "build-ledger": "babel ledger -d dist/ledger",
    "build-utils": "babel bat-utils -d dist/bat-utils && cp bat-utils/package.json dist/bat-utils/package.json",
    "eyeshade-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/eyeshade/server.js",
    "eyeshade-worker": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/eyeshade/worker.js",
    "helper-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/helper/server.js",
    "heroku-postbuild": "npm run build",
    "ledger-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/ledger/server.js",
    "ledger-worker": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/ledger/worker.js",
    "start": "echo use 'npm run start-[ledger|eyeshade|balance|helper]' or 'npm run start-[ledger|eyeshade]-worker'",
    "start-balance": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=balance ./node_modules/.bin/babel-node balance/server.js",
    "start-eyeshade": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=eyeshade ./node_modules/.bin/babel-node eyeshade/server.js",
    "start-eyeshade-worker": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=eyeshade ./node_modules/.bin/babel-node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/worker.js",
    "start-helper": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=helper ./node_modules/.bin/babel-node helper/server.js",
    "start-ledger": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=ledger ./node_modules/.bin/babel-node ledger/server.js",
    "start-ledger-worker": "NODE_PATH=. DEBUG=*,-babel,-mongo:*,mongo:queries SERVICE=ledger ./node_modules/.bin/babel-node --optimize_for_size --max_old_space_size=460 --gc_interval=100 ledger/worker.js",
    "test": "npm run test-security & (npm run test-unit && npm run test-integration)",
    "docker-test": "docker-compose run --rm -v $(pwd)/test:/usr/src/app/test ledger-web npm run test",
    "mongo-reset": "docker exec -it ledger-mongo mongo eyeshade --eval \"db.dropDatabase()\"",
    "redis-flush": "docker exec -it grant-redis redis-cli flushall",
    "db-reset": "npm run mongo-reset && npm run redis-flush",
    "lint": "standard",
    "lint-fix": "npm run lint -- --fix",
    "test-api": "echo 'no api tests'",
    "test-integration": "ava test/integration.test.js",
    "test-eyeshade": "ava test/eyeshade/*.test.js",
    "test-security": "nsp check",
    "test-transition": "echo 'no transition tests'",
    "test-unit": "ava test/*.unit.test.js",
    "docker-build": "docker-compose build",
    "docker-up": "docker-compose up $npm_package_config_docker_services",
    "docker-up-detached": "docker-compose up -d $npm_package_config_docker_services"
  },
  "config": {
    "docker": {
      "services": "ledger-web ledger-worker eyeshade-web eyeshade-worker grant-web"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brave-intl/bat-ledger.git"
  },
  "author": "Brave Developers <support@brave.com>",
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/brave-intl/bat-ledger/issues"
  },
  "homepage": "https://github.com/brave-intl/bat-ledger",
  "dependencies": {
    "@uphold/uphold-sdk-javascript": "^2.0.4",
    "accept-language-parser": "1.4.1",
    "babel-cli": "^6.26.0",
    "babel-preset-stage-2": "^6.24.1",
    "bat-balance": "^1.0.3",
    "bat-publisher": "^2.0.16",
    "bat-utils": "file:./bat-utils",
    "bell": "8.7.0",
    "bignumber.js": "^4.0.4",
    "bitcoinjs-lib": "^3.2.0",
    "blipp": "2.3.0",
    "bluebird": "3.5.0",
    "boom": "5.2.0",
    "bs58check": "^2.0.2",
    "bson": "1.0.4",
    "country-list": "1.1.0",
    "cron-parser": "2.4.1",
    "cryptiles": "3.1.2",
    "currency-codes": "1.1.2",
    "dateformat": "3.0.2",
    "dotenv": "^4.0.0",
    "epimetheus": "1.0.55",
    "ethereum-address": "0.0.4",
    "exposition": "^1.2.0",
    "faye-websocket": "0.11.1",
    "github": "11.0.0",
    "glob": "^7.1.2",
    "gridfs-stream": "1.1.1",
    "hapi": "^16.6.3",
    "hapi-async-handler": "^1.0.3",
    "hapi-auth-bearer-token": "^5.1.0",
    "hapi-auth-cookie": "7.0.0",
    "hapi-rate-limiter": "github:brave/hapi-rate-limiter",
    "hapi-require-https": "2.1.0",
    "hapi-swagger": "github:brave/hapi-swagger",
    "http-request-signature": "0.0.2",
    "inert": "^4.2.1",
    "joi": "^11.0.3",
    "json2csv": "^3.11.2",
    "minimatch": "^3.0.4",
    "moment": "^2.22.1",
    "mongodb": "^2.2.35",
    "monk": "6.0.5",
    "monotonic-timestamp": "0.0.9",
    "netmask": "1.0.6",
    "newrelic": "2.4.1",
    "node-anonize2-relic": "0.1.6",
    "node-binance-api": "0.2.5",
    "node-cache": "4.1.1",
    "node-slack": "0.0.7",
    "oxr": "1.0.2",
    "pluralize": "^7.0.0",
    "prom-client": "10.2.2",
    "proxy-agent": "^2.3.1",
    "raven": "^2.6.0",
    "redis": "^2.8.0",
    "rsmq": "^0.8.2",
    "rsmq-worker": "^0.5.2",
    "sdebug": "^0.9.5",
    "tldjs": "2.2.0",
    "tweetnacl": "^1.0.0",
    "underscore": "1.8.3",
    "uuid": "3.1.0",
    "validate-ip-node": "1.0.6",
    "vision": "^4.1.1",
    "wreck": "13.0.1"
  },
  "engines": {
    "node": "8.9.2",
    "npm": "5.8.0"
  },
  "devDependencies": {
    "ava": "^0.22.0",
    "babel-eslint": "^8.2.3",
    "bitgo": "^4.24.0",
    "npm-check-updates": "^2.14.2",
    "nsp": "^3.1.0",
    "standard": "^10.0.3",
    "supertest": "^3.0.0",
    "throng": "4.0.0"
  },
  "standard": {
    "ignore": [
      "config.js",
      "bat-utils/config/config.*"
    ],
    "parser": "babel-eslint"
  }
}
